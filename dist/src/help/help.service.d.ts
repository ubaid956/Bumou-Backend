import { PrismaService } from 'src/prisma/prisma.service';
import { NewHelpDto } from './dto';
import { PushNotificationService } from 'src/aliyun-Notification/push-notification.service';
import { ChatGateway } from 'src/chat/gateway/chat.gateway';
import { HelpChatService } from 'src/chat/service/help-chat.service';
export declare class HelpService {
    private readonly prisma;
    private readonly notification;
    private readonly chatGateway;
    private readonly helpChatService;
    constructor(prisma: PrismaService, notification: PushNotificationService, chatGateway: ChatGateway, helpChatService: HelpChatService);
    static expiresIn: number;
    getMyPendingHelpRequests(userId: string): Promise<{
        helper: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
        messages: ({
            sender: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isDeleted: boolean;
            senderId: string;
            message: string | null;
            status: import(".prisma/client").$Enums.ChatroomMessageStatus;
            type: import(".prisma/client").$Enums.ChatroomMessageType;
            file: string | null;
            reply_id: string | null;
            locationLat: number | null;
            locationLng: number | null;
            helpId: string;
        })[];
        requestedBy: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    }>;
    getOngoingHelp(userId: string): Promise<{
        unreadCount: number;
        helper: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
        _count: {
            messages: number;
        };
        messages: ({
            sender: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isDeleted: boolean;
            senderId: string;
            message: string | null;
            status: import(".prisma/client").$Enums.ChatroomMessageStatus;
            type: import(".prisma/client").$Enums.ChatroomMessageType;
            file: string | null;
            reply_id: string | null;
            locationLat: number | null;
            locationLng: number | null;
            helpId: string;
        })[];
        requestedBy: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    }[]>;
    getIncomingRequests(userId: string): Promise<({
        helper: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
        messages: ({
            sender: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isDeleted: boolean;
            senderId: string;
            message: string | null;
            status: import(".prisma/client").$Enums.ChatroomMessageStatus;
            type: import(".prisma/client").$Enums.ChatroomMessageType;
            file: string | null;
            reply_id: string | null;
            locationLat: number | null;
            locationLng: number | null;
            helpId: string;
        })[];
        requestedBy: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    })[]>;
    askForHelp(id: string, payload: NewHelpDto): Promise<{
        messages: ({
            sender: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isDeleted: boolean;
            senderId: string;
            message: string | null;
            status: import(".prisma/client").$Enums.ChatroomMessageStatus;
            type: import(".prisma/client").$Enums.ChatroomMessageType;
            file: string | null;
            reply_id: string | null;
            locationLat: number | null;
            locationLng: number | null;
            helpId: string;
        })[];
        requestedBy: {
            id: string;
            email: string;
            username: string;
            phone: string;
            createdAt: Date;
            updatedAt: Date;
            password: string;
            userType: import(".prisma/client").$Enums.UserType;
            local: string | null;
            firstName: string;
            lastName: string;
            profilePicture: string | null;
            address: string | null;
            city: string | null;
            state: string | null;
            zip: string | null;
            country: string | null;
            schoolName: string | null;
            className: string | null;
            teacherName: string | null;
            isVerified: boolean;
            isBlocked: boolean;
            isOnline: boolean;
            isDeleted: boolean;
            isHelping: boolean;
            Aliyun_token: string | null;
            device_type: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    }>;
    cancelHelp(id: string): Promise<{
        success: boolean;
        message: string;
        help: {
            helper: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
            messages: ({
                sender: {
                    id: string;
                    email: string;
                    username: string;
                    phone: string;
                    createdAt: Date;
                    updatedAt: Date;
                    password: string;
                    userType: import(".prisma/client").$Enums.UserType;
                    local: string | null;
                    firstName: string;
                    lastName: string;
                    profilePicture: string | null;
                    address: string | null;
                    city: string | null;
                    state: string | null;
                    zip: string | null;
                    country: string | null;
                    schoolName: string | null;
                    className: string | null;
                    teacherName: string | null;
                    isVerified: boolean;
                    isBlocked: boolean;
                    isOnline: boolean;
                    isDeleted: boolean;
                    isHelping: boolean;
                    Aliyun_token: string | null;
                    device_type: string | null;
                };
            } & {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                isDeleted: boolean;
                senderId: string;
                message: string | null;
                status: import(".prisma/client").$Enums.ChatroomMessageStatus;
                type: import(".prisma/client").$Enums.ChatroomMessageType;
                file: string | null;
                reply_id: string | null;
                locationLat: number | null;
                locationLng: number | null;
                helpId: string;
            })[];
            requestedBy: {
                id: string;
                email: string;
                username: string;
                phone: string;
                createdAt: Date;
                updatedAt: Date;
                password: string;
                userType: import(".prisma/client").$Enums.UserType;
                local: string | null;
                firstName: string;
                lastName: string;
                profilePicture: string | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zip: string | null;
                country: string | null;
                schoolName: string | null;
                className: string | null;
                teacherName: string | null;
                isVerified: boolean;
                isBlocked: boolean;
                isOnline: boolean;
                isDeleted: boolean;
                isHelping: boolean;
                Aliyun_token: string | null;
                device_type: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            address: string | null;
            isDeleted: boolean;
            status: import(".prisma/client").$Enums.HelpStatus;
            locationLat: number | null;
            locationLng: number | null;
            expiresAt: Date;
            requestedById: string;
            helperId: string | null;
        };
    }>;
    acceptHelp(userId: string, helpId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    }>;
    deleteHelp(helpId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        address: string | null;
        isDeleted: boolean;
        status: import(".prisma/client").$Enums.HelpStatus;
        locationLat: number | null;
        locationLng: number | null;
        expiresAt: Date;
        requestedById: string;
        helperId: string | null;
    }>;
    deleteHelpMessages(messageId: string, userId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isDeleted: boolean;
        senderId: string;
        message: string | null;
        status: import(".prisma/client").$Enums.ChatroomMessageStatus;
        type: import(".prisma/client").$Enums.ChatroomMessageType;
        file: string | null;
        reply_id: string | null;
        locationLat: number | null;
        locationLng: number | null;
        helpId: string;
    }>;
    getHelpMessages(userId: string, helpId: string): Promise<any>;
    markMessageAsRead(userId: string, helpMessageId: string, helpId: string): Promise<{
        id: string;
        createdAt: Date;
        userId: string;
        helpId: string;
        helpMessageId: string | null;
    }>;
}
